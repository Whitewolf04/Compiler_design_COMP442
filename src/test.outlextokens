[class, class, 1] [id, POLYNOMIAL, 1] [opencubr, {, 1] 
[public, public, 2] [function, function, 2] [id, evaluate, 2] [colon, :, 2] [openpar, (, 2] [id, x, 2] [colon, :, 2] [float, float, 2] [closepar, ), 2] [returntype, =>, 2] [float, float, 2] [semicol, ;, 2] 
[closecubr, }, 3] [semicol, ;, 3] 
[class, class, 5] [id, RANDOM, 5] [isa, isa, 5] [id, POLYNOMIAL, 5] [opencubr, {, 5] 
[public, public, 6] [function, function, 6] [id, test, 6] [colon, :, 6] [openpar, (, 6] [closepar, ), 6] [returntype, =>, 6] [void, void, 6] [semicol, ;, 6] 
[private, private, 7] [attribute, attribute, 7] [id, a, 7] [colon, :, 7] [float, float, 7] [semicol, ;, 7] 
[closecubr, }, 8] [semicol, ;, 8] 
[class, class, 10] [id, LINEAR, 10] [isa, isa, 10] [id, POLYNOMIAL, 10] [comma, ,, 10] [id, RANDOM, 10] [opencubr, {, 10] 
[private, private, 11] [attribute, attribute, 11] [id, a, 11] [colon, :, 11] [float, float, 11] [semicol, ;, 11] 
[private, private, 12] [attribute, attribute, 12] [id, b, 12] [colon, :, 12] [float, float, 12] [semicol, ;, 12] 
[public, public, 13] [constructor, constructor, 13] [colon, :, 13] [openpar, (, 13] [id, A, 13] [colon, :, 13] [float, float, 13] [comma, ,, 13] [id, B, 13] [colon, :, 13] [float, float, 13] [closepar, ), 13] [semicol, ;, 13] 
[public, public, 14] [function, function, 14] [id, evaluate, 14] [colon, :, 14] [openpar, (, 14] [id, x, 14] [colon, :, 14] [float, float, 14] [closepar, ), 14] [returntype, =>, 14] [float, float, 14] [semicol, ;, 14] 
[closecubr, }, 15] [semicol, ;, 15] 
[class, class, 17] [id, QUADRATIC, 17] [isa, isa, 17] [id, POLYNOMIAL, 17] [opencubr, {, 17] 
[private, private, 18] [attribute, attribute, 18] [id, a, 18] [colon, :, 18] [float, float, 18] [semicol, ;, 18] 
[private, private, 19] [attribute, attribute, 19] [id, b, 19] [colon, :, 19] [float, float, 19] [semicol, ;, 19] 
[private, private, 20] [attribute, attribute, 20] [id, c, 20] [colon, :, 20] [float, float, 20] [semicol, ;, 20] 
[public, public, 21] [constructor, constructor, 21] [colon, :, 21] [openpar, (, 21] [id, A, 21] [colon, :, 21] [float, float, 21] [comma, ,, 21] [id, B, 21] [colon, :, 21] [float, float, 21] [comma, ,, 21] [id, C, 21] [colon, :, 21] [float, float, 21] [closepar, ), 21] [semicol, ;, 21] 
[public, public, 22] [constructor, constructor, 22] [colon, :, 22] [openpar, (, 22] [id, A, 22] [colon, :, 22] [float, float, 22] [closepar, ), 22] [semicol, ;, 22] 
[public, public, 23] [function, function, 23] [id, evaluate, 23] [colon, :, 23] [openpar, (, 23] [id, x, 23] [colon, :, 23] [float, float, 23] [closepar, ), 23] [returntype, =>, 23] [float, float, 23] [semicol, ;, 23] 
[closecubr, }, 24] [semicol, ;, 24] 
[inlinecmt, // ====== member function implementations ====== //  \n, 26]
[function, function, 27] [id, POLYNOMIAL, 27] [scopeop, ::, 27] [id, evaluate, 27] [openpar, (, 27] [id, x, 27] [colon, :, 27] [float, float, 27] [closepar, ), 27] [returntype, =>, 27] [float, float, 27] 
[opencubr, {, 28] 
[return, return, 29] [openpar, (, 29] [intnum, 0, 29] [closepar, ), 29] [semicol, ;, 29] 
[closecubr, }, 30] 
[function, function, 32] [id, QUADRATIC, 32] [scopeop, ::, 32] [id, evaluate, 32] [openpar, (, 32] [id, x, 32] [colon, :, 32] [float, float, 32] [closepar, ), 32] [returntype, =>, 32] [float, float, 32] 
[opencubr, {, 33] 
[localvar, localvar, 34] [id, result, 34] [colon, :, 34] [float, float, 34] [semicol, ;, 34] 
[inlinecmt, //Using Horner's method\n, 35]
[id, result, 36] [assign, =, 36] [id, a, 36] [semicol, ;, 36] 
[id, result, 37] [assign, =, 37] [id, result, 37] [mult, *, 37] [id, x, 37] [plus, +, 37] [id, b, 37] [semicol, ;, 37] 
[id, result, 38] [assign, =, 38] [id, result, 38] [mult, *, 38] [not, not, 38] [id, x, 38] [plus, +, 38] [id, c, 38] [semicol, ;, 38] 
[return, return, 39] [openpar, (, 39] [id, result, 39] [closepar, ), 39] [semicol, ;, 39] 
[closecubr, }, 40] 
[function, function, 42] [id, QUADRATIC, 42] [scopeop, ::, 42] [constructor, constructor, 42] [openpar, (, 42] [id, A, 42] [colon, :, 42] [float, float, 42] [comma, ,, 42] [id, B, 42] [colon, :, 42] [float, float, 42] [comma, ,, 42] [id, C, 42] [colon, :, 42] [float, float, 42] [closepar, ), 42] 
[opencubr, {, 43] 
[id, self, 44] [dot, ., 44] [id, a, 44] [assign, =, 44] [id, id, 44] [openpar, (, 44] [id, id, 44] [closepar, ), 44] [dot, ., 44] [id, id, 44] [opensqbr, [, 44] [id, id, 44] [closesqbr, ], 44] [opensqbr, [, 44] [id, id, 44] [closesqbr, ], 44] [semicol, ;, 44] 
[id, self, 45] [dot, ., 45] [id, b, 45] [assign, =, 45] [id, B, 45] [semicol, ;, 45] 
[id, self, 46] [dot, ., 46] [id, c, 46] [assign, =, 46] [id, C, 46] [semicol, ;, 46] 
[closecubr, }, 47] 
[function, function, 49] [id, QUADRATIC, 49] [scopeop, ::, 49] [constructor, constructor, 49] [openpar, (, 49] [id, A, 49] [colon, :, 49] [float, float, 49] [comma, ,, 49] [id, B, 49] [colon, :, 49] [float, float, 49] [comma, ,, 49] [id, C, 49] [colon, :, 49] [float, float, 49] [closepar, ), 49] 
[opencubr, {, 50] 
[id, self, 51] [dot, ., 51] [id, a, 51] [assign, =, 51] [id, A, 51] [semicol, ;, 51] 
[closecubr, }, 52] 
[function, function, 54] [id, LINEAR, 54] [scopeop, ::, 54] [constructor, constructor, 54] [openpar, (, 54] [id, A, 54] [colon, :, 54] [float, float, 54] [comma, ,, 54] [id, B, 54] [colon, :, 54] [float, float, 54] [closepar, ), 54] 
[opencubr, {, 55] 
[id, self, 56] [dot, ., 56] [id, a, 56] [assign, =, 56] [id, A, 56] [semicol, ;, 56] 
[id, self, 57] [dot, ., 57] [id, b, 57] [assign, =, 57] [id, B, 57] [semicol, ;, 57] 
[closecubr, }, 58] 
[function, function, 60] [id, LINEAR, 60] [scopeop, ::, 60] [id, evaluate, 60] [openpar, (, 60] [id, x, 60] [colon, :, 60] [float, float, 60] [closepar, ), 60] [returntype, =>, 60] [float, float, 60] 
[opencubr, {, 61] 
[localvar, localvar, 62] [id, result, 62] [colon, :, 62] [float, float, 62] [semicol, ;, 62] 
[id, result, 63] [assign, =, 63] [floatnum, 0.0, 63] [semicol, ;, 63] 
[id, result, 64] [assign, =, 64] [id, a, 64] [mult, *, 64] [id, x, 64] [plus, +, 64] [id, b, 64] [semicol, ;, 64] 
[return, return, 65] [openpar, (, 65] [id, result, 65] [closepar, ), 65] [semicol, ;, 65] 
[closecubr, }, 66] 
[function, function, 68] [id, count, 68] [openpar, (, 68] [id, x, 68] [colon, :, 68] [integer, integer, 68] [closepar, ), 68] [returntype, =>, 68] [integer, integer, 68] 
[opencubr, {, 69] 
[return, return, 70] [openpar, (, 70] [id, x, 70] [closepar, ), 70] [semicol, ;, 70] 
[closecubr, }, 71] 
[inlinecmt, // ====== main ====== //\n, 73]
[function, function, 74] [id, main, 74] [openpar, (, 74] [closepar, ), 74] [returntype, =>, 74] [void, void, 74] 
[opencubr, {, 75] 
[localvar, localvar, 76] [id, f1, 76] [colon, :, 76] [id, LINEAR, 76] [openpar, (, 76] [intnum, 2, 76] [comma, ,, 76] [floatnum, 3.5, 76] [closepar, ), 76] [semicol, ;, 76] 
[localvar, localvar, 77] [id, f2, 77] [colon, :, 77] [id, QUADRATIC, 77] [openpar, (, 77] [minus, -, 77] [floatnum, 2.0, 77] [comma, ,, 77] [floatnum, 1.0, 77] [comma, ,, 77] [floatnum, 0.0, 77] [closepar, ), 77] [semicol, ;, 77] 
[localvar, localvar, 78] [id, counter, 78] [colon, :, 78] [integer, integer, 78] [semicol, ;, 78] 
[localvar, localvar, 79] [id, test, 79] [colon, :, 79] [id, count, 79] [openpar, (, 79] [intnum, 2, 79] [closepar, ), 79] [semicol, ;, 79] 
[id, counter, 81] [assign, =, 81] [intnum, 1, 81] [semicol, ;, 81] 
[while, while, 83] [openpar, (, 83] [id, counter, 83] [leq, <=, 83] [intnum, 10, 83] [closepar, ), 83] 
[opencubr, {, 84] 
[write, write, 85] [openpar, (, 85] [id, counter, 85] [closepar, ), 85] [semicol, ;, 85] 
[write, write, 86] [openpar, (, 86] [id, f1, 86] [dot, ., 86] [id, evaluate, 86] [openpar, (, 86] [id, counter, 86] [closepar, ), 86] [closepar, ), 86] [semicol, ;, 86] 
[write, write, 87] [openpar, (, 87] [id, f2, 87] [dot, ., 87] [id, evaluate, 87] [openpar, (, 87] [id, counter, 87] [closepar, ), 87] [closepar, ), 87] [semicol, ;, 87] 
[closecubr, }, 88] [semicol, ;, 88] 
[closecubr, }, 89] 
